[tool:pytest]
# Pytest configuration for SuperClaude Installation Suite testing

# Test discovery
testpaths = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum Python version
minversion = 6.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=../../Scripts
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --benchmark-only
    --benchmark-sort=mean
    --durations=10

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    e2e: End-to-end workflow tests
    performance: Performance and benchmarking tests
    slow: Tests that take longer than 1 second
    requires_network: Tests requiring network connectivity
    requires_claude: Tests requiring Claude CLI installation
    requires_npm: Tests requiring npm and Node.js
    critical: Critical path tests that must always pass
    smoke: Quick smoke tests for basic functionality
    regression: Regression tests for known issues

# Test timeout
timeout = 300

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage configuration
[coverage:run]
source = ../../Scripts
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */conftest.py
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml